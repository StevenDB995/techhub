name: deploy

on:
  push:
    branches: [ "main" ]  # Trigger on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use GitHub-hosted runner

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the web app image
        run: docker build -t ${{ vars.APP_IMAGE }}:${{ vars.APP_VERSION }} .

      - name: Push the Docker image to DockerHub
        run: docker push ${{ vars.APP_IMAGE }}:${{ vars.APP_VERSION }}

  deploy:
    runs-on: self-hosted  # Use your self-hosted runner
    needs: build  # Wait for the build stage to complete

    env:
      APP_IMAGE: ${{ vars.APP_IMAGE }}
      APP_VERSION: ${{ vars.APP_VERSION }}
      SERVER_PORT: ${{ vars.SERVER_PORT }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

    steps:
      - name: Checkout the code on the deployment host
        uses: actions/checkout@v4  # Bring the docker-compose.yml to the host

      - name: Pull the web app image from DockerHub
        run: docker pull ${{ vars.APP_IMAGE }}:${{ vars.APP_VERSION }}

      - name: Bring down running containers
        run: docker compose down

      - name: Deploy and run docker compose
        run: docker compose up -d

